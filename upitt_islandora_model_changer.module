<?php


/**
 * Implements hook_menu().
 */
function upitt_islandora_model_changer_menu() {
  return array(
    'islandora/object/%islandora_object/manage/changemodel' => array(
      'title' => 'Change the object\'s model',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('upitt_islandora_model_changer_change', 2),
      'type' => MENU_CALLBACK,
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
    ),
  );
}

/**
 * Implements hook_islandora_overview_object_alter().
 *
 * Shows the collection usage stats on the object overview tab if allowed.
 */
function upitt_islandora_model_changer_islandora_overview_object_alter(AbstractObject &$object, &$output) {
  if (!user_access(ISLANDORA_MANAGE_PROPERTIES)) {
    return;
  }
  if (_is_model_change_allowed($object)) {
    add_change_model_output($object, $output);
  }
}


/**
 * Helper function to determine whether or not the current object's is allowed to be changed based
 * on the model.
 */
function _is_model_change_allowed(AbstractObject $object) {
  $retval = FALSE;
  // allow bookCModel
  $retval |= (!(array_search('islandora:bookCModel', $object->models) === FALSE));
  // allow manuscriptCModel
  $retval |= (!(array_search('islandora:manuscriptCModel', $object->models) === FALSE));
  // allow newspaperIssueCModel
  $retval |= (!(array_search('islandora:newspaperIssueCModel', $object->models) === FALSE));
  // allow image
  $retval |= (!(array_search('islandora:sp_large_image_cmodel', $object->models) === FALSE));
  return $retval;
}

function add_change_model_output(AbstractObject &$object, &$output) {
  $object_base_model = _base_model_of_object($object);

  $change_model_link = l(t("Change model from ") . '"' . $object_base_model . '"', "/islandora/object/{$object->id}/manage/changemodel");
  $output['upitt_islandora_model_changer'] = array(
    '#type' => 'item',
    '#title' => 'Change model',
    '#markup' => $change_model_link
  );
}

function upitt_islandora_model_changer_change($form, &$form_state, AbstractObject $object) {
  // Check whether or not this page has $_GET parameters provided... if so, and
  // if it has a legal model value, then process as if it was submitted via the form.
  if (isset($_GET['model'])) {
    $item = menu_get_item();
    $object = $item['map'][2];
    $model = $_GET['model'];
    // Make sure that the full model name is provided.
    if (strstr($model, "islandora:") == '') {
      $model = 'islandora:' . $model;
    }

    if (upitt_islandora_model_changer_process_change($object, $model)) {
      drupal_set_message(t('Model changed to @model for this object.', array(
          '@model' => $model) ));
      drupal_goto('islandora/object/' . $object->id . '/manage');
      return;
    }
  }

  // display the current object's model and dropdown box for new model selection.
  $object_base_model = _base_model_of_object($object);

  $form['model_options'] = array(
      '#type' => 'value',
      '#value' => array('islandora:bookCModel' => t('Book'),
          'islandora:sp_large_image_cmodel' => t('Image'),
          'islandora:newspaperIssue' => t('Newspaper Issue'),
          'islandora:manuscriptCModel' => t('Manuscript')),
    );

  $form['model'] = array(
      '#type' => 'select',
      '#title' => t('Model'),
      '#description' => t('Update the underlying model for the given object.'),
      '#options' => $form['model_options']['#value'],
    );

  $form['object_id'] = array(
      '#type' => 'hidden',
      '#value' => $object->id,
    );

  $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Save'),
    );

  return $form;
}

function upitt_islandora_model_changer_change_submit($form, &$form_state) {
  $pid = $form_state['values']['object_id'];
  $object = islandora_object_load($pid);
  $current_object_base_model = _base_model_of_object($object);
  if ($form_state['values']['model'] && $current_object_base_model <> $form_state['values']['model']) {
    upitt_islandora_model_changer_process_change($object, $form_state['values']['model']);
  }
  $form_state['redirect'] = "/islandora/object/{$form_state['values']['object_id']}/manage";
}

function upitt_islandora_model_changer_process_change($object, $model) {
  $retval = TRUE;
  module_load_include('inc', 'islandora_paged_content', 'includes/utilities');

  // If changing to a Book, convert all child pages to pageCModel objects... else convert to manuscriptPageCModel
  $pages = islandora_paged_content_get_pages($object);
  if (($model == 'islandora:sp_large_image_cmodel') && count($pages) == 1) {
    if (count($pages) > 1) {
      drupal_set_message(t('This object can not be converted because it has child pages [@page_count pages]' .
              ' -- and an Image model can not have Page objects as children.', array(
                '@page_count' => count($pages),
              )), 'error');
      $retval = FALSE;
    } else {
      $ok = TRUE;
      foreach ($pages as $page) {
        $page_object = islandora_object_load($page['pid']);
        if (isset($page_object['OBJ']) && !empty($page_object['OBJ']) &&
            isset($page_object['JP2']) && !empty($page_object['JP2'])) {

          $obj_filename = '/tmp/OBJ_'.str_replace(':', '_', $page['pid']);
          $obj = $page_object['OBJ']->getContent($obj_filename);
          $datastream_obj = $object->constructDatastream('OBJ');
          $datastream_obj->setContentFromFile($obj_filename);
          $object->ingestDatastream($datastream_obj);
          @unlink($obj_filename);

          $jp2_filename = '/tmp/JP2_'.str_replace(':', '_', $page['pid']);
          $jp2 = $page_object['JP2']->getContent($jp2_filename);
          $datastream_jp2 = $object->constructDatastream('JP2');
          $datastream_jp2->setContentFromFile($jp2_filename);
          $object->ingestDatastream($datastream_jp2);
          drupal_set_message('purgeObject must be called for ' . $page['pid']);
          @unlink($jp2_filename);
        }
        else {
          drupal_set_message(t('This child object [PID = @page_pid] is lacking either OBJ or JP2 or ' .
            'both datastreams.  Pages [@page_count pages].', array(
              '@page_pid' => $page['pid'],
              '@page_count' => count($pages),
            ), 'warning'));
          $ok = FALSE;
        }
      }
      if ($ok) {
        $object->models = array("fedora-system:FedoraObject-3.0", $model);
      }
    }
  }
  else {
    $object->models = array("fedora-system:FedoraObject-3.0", $model);
    if ($model == 'islandora:bookCModel') {
      $resultant_page_model = 'islandora:pageCModel';
    }
    elseif ($model == 'islandora:newpaperIssueCModel') {
      $resultant_page_model = 'islandora:newspaperPageCModel';
    }
    else {
      $resultant_page_model = 'islandora:manuscriptPageCModel';
    }
    foreach ($pages as $page) {
      $page_object = islandora_object_load($page['pid']);
      $page_current_base_model = _base_model_of_object($page_object);
      if ($page_current_base_model <> $resultant_page_model) {
        $page_object->models = array("fedora-system:FedoraObject-3.0", $resultant_page_model);
      }
    }
  }
  return $retval;
}

/**
 * Helper function to derive the base model -- omitting the "fedora-system:FedoraObject-3.0" value.
 */
function _base_model_of_object($object) {
  $models = $object->models;
  $object_base_model = FALSE;
  foreach ($models as $model) {
    if ($model <> 'fedora-system:FedoraObject-3.0' && !$object_base_model) {
      $object_base_model = $model;
    }
  }
  return $object_base_model;
}

